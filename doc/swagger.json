{
  "openapi": "3.0.0",
  "info": {
    "title": "TAO Test Center API",
    "version": "0.1"
  },
  "paths": {
    "/taoTestCenterRostering/api/eligibilities": {
      "get": {
        "tags": [
          "eligibilities"
        ],
        "summary": "Search for eligibilities",
        "description": "Search for eligibilities",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestEligibilities::get",
        "parameters": [
          {
            "name": "delivery",
            "in": "query",
            "description": "Delivery Uri (Url encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "testCenter",
            "in": "query",
            "description": "Test center Uri (Url encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Eligibility data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Eligibility"
                      }
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true,
                    "data": [
                      {
                        "delivery": "http://sample/first.rdf#i1536680377163170",
                        "testCenter": "http://sample/first.rdf#i1536680377163171",
                        "testTakers": [
                          "http://sample/first.rdf#i1536680377163172",
                          "http://sample/first.rdf#i1536680377163173"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Eligibility not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Eligibility not found for provided search parameters.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taoTestCenterRostering/api/eligibility": {
      "get": {
        "tags": [
          "eligibility"
        ],
        "summary": "Get eligibility data",
        "description": "Get eligibility data",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestEligibility::get",
        "parameters": [
          {
            "name": "eligibility",
            "in": "query",
            "description": "Eligibility Uri (Url encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Eligibility data",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "delivery": "http://sample/first.rdf#i1536680377163170",
                    "testCenter": "http://sample/first.rdf#i1536680377163171",
                    "testTakers": [
                      "http://sample/first.rdf#i1536680377163172",
                      "http://sample/first.rdf#i1536680377163173"
                    ],
                    "proctored": true
                  },
                  "$ref": "#/components/schemas/Eligibility"
                }
              }
            }
          },
          "400": {
            "description": "Missing parameter",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 400,
                    "errorMsg": "Missed required parameter: `eligibility`",
                    "version": "3.3.0-sprint102"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid eligibility Uri",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Eligibility `http://sample/first.rdf#i15367360596713165` does not exist.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "eligibility"
        ],
        "summary": "Update eligibility test-takers",
        "description": "Update eligibility test-takers list",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestEligibility::put",
        "parameters": [
          {
            "name": "eligibility",
            "in": "query",
            "description": "Eligibility Uri (Url encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "testTakers": {
                    "description": "Array of test-takers URIs. Remove all the test takers if not given",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "proctored": {
                    "description": "Make eligibility proctored or not",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated eligibility uri",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    },
                    "uri": {
                      "description": "Updated eligibility URI",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true,
                    "uri": "http://sample/first.rdf#i1536680377163171"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid test-taker uri",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 400,
                    "errorMsg": "`testTakers` parameter must be an array",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test taker, eligibility not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Resource with `http://sample/first.rdf#i1536680377656966s` uri not found",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "eligibility"
        ],
        "summary": "Create new eligibility",
        "description": "Create new test center eligibility by test center uri and delivery",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestEligibility::post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "delivery",
                  "testCenter"
                ],
                "properties": {
                  "delivery": {
                    "description": "delivery URI",
                    "type": "string"
                  },
                  "testCenter": {
                    "description": "test center URI",
                    "type": "string"
                  },
                  "testTakers": {
                    "description": "Array of test-takers URIs",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "proctored": {
                    "description": "Create proctored/unproctored eligibility",
                    "type": "boolean"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created eligibility URI",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    },
                    "uri": {
                      "description": "Created eligibility URI",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true,
                    "uri": "http://sample/first.rdf#i1536680377163171"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid delivery, test center or test-takers uri or eligibility already exists",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 400,
                    "errorMsg": "`testTakers` parameter must be an array",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test taker, delivery or test center not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Resource with `http://sample/first.rdf#i1536680377656966s` uri not found",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taoTestCenterRostering/api/testCenter": {
      "get": {
        "tags": [
          "testCenter"
        ],
        "summary": "Get test center data",
        "description": "Get test center data",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestTestCenter::get",
        "parameters": [
          {
            "name": "testCenter",
            "in": "query",
            "description": "testCenter Uri (Url encoded)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Test center data",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "label": {
                      "description": "Test center label",
                      "type": "string"
                    },
                    "class": {
                      "description": "Test center class URI",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "example": {
                    "label": "Test Center ABC",
                    "class": "http://sample/first.rdf#i15367360596713165"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Invalid test center Uri",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Test Center `http://sample/first.rdf#i15367360596713165` does not exist.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "testCenter"
        ],
        "summary": "Create new test center",
        "description": "Create new test center",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestTestCenter::post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "label"
                ],
                "properties": {
                  "class-uri": {
                    "description": "Class uri to import item. If not specified root class will be used.",
                    "type": "string"
                  },
                  "class-label": {
                    "description": "Label of class to import item. If not specified root class will be used.\n   * If label is not unique first match will be used.",
                    "type": "string"
                  },
                  "label": {
                    "description": "Test center label",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created test center URI",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    },
                    "uri": {
                      "description": "Created test center URI",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true,
                    "uri": "http://sample/first.rdf#i1536680377163171"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid class uri",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 0,
                    "errorMsg": "Class does not exist. Please use valid class-uri or class-label",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/taoTestCenterRostering/api/testCenterUsers": {
      "post": {
        "tags": [
          "testCenter"
        ],
        "summary": "Assign user to the test center",
        "description": "Assign user to the test center",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestTestCenterUsers::post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "required": [
                  "testCenter",
                  "user",
                  "role"
                ],
                "properties": {
                  "testCenter": {
                    "description": "Test center id",
                    "type": "string"
                  },
                  "user": {
                    "description": "User id",
                    "type": "string"
                  },
                  "role": {
                    "description": "The role to which the user should be assigned",
                    "type": "string",
                    "enum": [
                      "http://www.tao.lu/Ontologies/TAOProctor.rdf#TestCenterAdministratorRole",
                      "http://www.tao.lu/Ontologies/TAOProctor.rdf#ProctorRole",
                      "http://www.tao.lu/Ontologies/generis.rdf#taoSyncManager"
                    ]
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Assign user to the test center",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "User is not allowed to be assigned to given role",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 400,
                    "errorMsg": "User with given role cannot be assigned to the test center.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test center, user or role not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Test Center `http://sample/first.rdf#i15367360596713165` does not exist.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "testCenter"
        ],
        "summary": "Remove user from the test center",
        "description": "Remove user from the test center",
        "operationId": "oat\\taoTestCenterRostering\\controller\\RestTestCenterUsers::delete",
        "parameters": [
          {
            "name": "testCenter",
            "in": "path",
            "description": "The test center id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user",
            "in": "path",
            "description": "User id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "role",
            "in": "path",
            "description": "Role id",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "http://www.tao.lu/Ontologies/TAOProctor.rdf#TestCenterAdministratorRole",
                "http://www.tao.lu/Ontologies/TAOProctor.rdf#ProctorRole",
                "http://www.tao.lu/Ontologies/generis.rdf#taoSyncManager"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remove user from the test center",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "success": {
                      "description": "`false` on failure, `true` on success",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "example": {
                    "success": true
                  }
                }
              }
            }
          },
          "400": {
            "description": "User can not be unassigned from the test center with given role",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 400,
                    "errorMsg": "User is not assigned to the test center with given role.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Test center, user or role not found",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "success": false,
                    "errorCode": 404,
                    "errorMsg": "Test Center `http://sample/first.rdf#i15367360596713165` does not exist.",
                    "version": "3.3.0-sprint85"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Eligibility": {
        "required": [
          "delivery",
          "testCenter"
        ],
        "properties": {
          "delivery": {
            "description": "delivery URI",
            "type": "string"
          },
          "testTakers": {
            "description": "Array of test-taker URIs",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "testCenter": {
            "description": "Test center URI",
            "type": "string"
          },
          "id": {
            "description": "Eligibility identifier",
            "type": "string"
          },
          "proctored": {
            "description": "Eligibility proctored   value",
            "type": "boolean"
          }
        },
        "type": "object"
      }
    }
  }
}
